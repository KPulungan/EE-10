MODULE      addsub
TITLE      'Adder/Subtracter with Flags'


" addsub        DEVICE  'MACH4032'


" Description:  This is Kemal Pulungan's file for Homework #4.  It implements a
"               4-bit Adder/Subtracter which includes flags summarizing the
"               result (zero, carry/borrow, overflow, and sign).  It also has
"               outputs that output the comparison result (assuming a
"               subtraction is being done).


" Revision History:
" 04/24/07   Glen George  Initial Revision
" 04/25/07   Glen George  Fixed logic so add and subtract both work and fit
" 04/25/07   Glen George  Fixed reversal of SignedGT and SignedLT outputs
"                         (label on PCB is wrong)
" 10/24/07   Glen George  Changed pinout and Subtract polarity to match new
"                         PCB
" 10/24/07   Glen George  Changed file to match the new assignment
" 10/24/07   Glen George  Updated comments
" 11/02/08   Glen George  Updated comments
" 01/12/18   Glen George  Changed pinout to match new PCB (v3.0)
" 01/04/21   Glen George  Updated comments
" 02/04/23	 Kemal Pulungan		Added his code and comments



" Pins

" Inputs

Subtract        pin 37;                 "input   Add/Subtract input (low for add)


" Operand A input
A3              pin 31;                 "input   operand A, bit 3
A2              pin 30;                 "input   operand A, bit 2
A1              pin 29;                 "input   operand A, bit 1
A0              pin 26;                 "input   operand A, bit 0

" Operand B input
B3              pin 22;                 "input   operand B, bit 3
B2              pin 21;                 "input   operand B, bit 2
B1              pin 20;                 "input   operand B, bit 1
B0              pin 19;                 "input   operand B, bit 0


" Sum/Difference output

Sum4            pin 13   ISTYPE 'COM';  "output  Sum/Difference, bit 4
Sum3            pin  3   ISTYPE 'COM';  "output  Sum/Difference, bit 3
Sum2            pin  2   ISTYPE 'COM';  "output  Sum/Difference, bit 2
Sum1            pin 44   ISTYPE 'COM';  "output  Sum/Difference, bit 1
Sum0            pin 43   ISTYPE 'COM';  "output  Sum/Difference, bit 0


" Flag outputs

Carry           pin  9   ISTYPE 'COM';  "output  Carry flag
Overflow        pin  8   ISTYPE 'COM';  "output  Overflow flag
Sign            pin  7   ISTYPE 'COM';  "output  Sign flag
Zero            pin  4   ISTYPE 'COM';  "output  Zero flag


" Comparison outputs

UnsignedGT      pin 15   ISTYPE 'COM';  "output  unsigned greater than (>)
UnsignedEQ      pin 41   ISTYPE 'COM';  "output  unsigned equal to     (=)
UnsignedLT      pin 24   ISTYPE 'COM';  "output  unsigned less than    (<)
SignedGT        pin 16   ISTYPE 'COM';  "output  signed greater than (>)
SignedEQ        pin 42   ISTYPE 'COM';  "output  signed equal to     (=)
SignedLT        pin 25   ISTYPE 'COM';  "output  signed less than    (<)


" Unconnected Pins

"IOA13          pin 14                   input/output
"IOB0           pin 18                   input/output
"IOB12          pin 35                   input/output
"IOB13          pin 36                   input/output

"IOGOE0         pin 40                   input/output/output enable
"IOGOE1         pin 38                   input/output/output enable
"ICLK0          pin 39                   input/clock
"ICLK2          pin 17                   input/clock


" Programming Pins (not available for use in the design)

"TCK            pin 10                   pgm     programming interface TCK
"TDI            pin  1                   pgm     programming interface TDI
"TDO            pin 32                   pgm     programming interface TDO
"TMS            pin 23                   pgm     programming interface TMS


" Power Pins

"GND            pin  5                   supply  power ground
"GND            pin 12                   supply  power ground
"GND            pin 27                   supply  power ground
"GND            pin 34                   supply  power ground
"VCC            pin 11                   supply  power Vcc
"VCC            pin 33                   supply  power Vcc
"VCCIO          pin 28                   supply  power Vcc I/O
"VCCIO          pin  6                   supply  power Vcc I/O


" Intermediate Terms
" CarryOuti is meant for storing a sum that cannot fully fit into the i-th bit
CarryOut0       node     ISTYPE 'COM';  "node    carry out of bit 0
CarryOut1       node     ISTYPE 'COM';  "node    carry out of bit 1
CarryOut2       node     ISTYPE 'COM';  "node    carry out of bit 2




EQUATIONS


" a 1-bit full adder (for the ith bit)
"    note that CarryIn[i] = CarryOut[i - 1]
" Sumi       =  Ai $ Bi $ CarryIni;
" CarryOuti  =  (Ai & Bi) # (CarryIni & (Ai $ Bi));

" Lowest order bit
" Subtract is used instead of CarryIn because 
" there is no previous sum to carry from
Sum0 = A0 $ (Subtract $ B0) $ Subtract;
CarryOut0 =  (A0 & (Subtract $ B0)) # (Subtract & (A0 $ (Subtract $ B0)));

" 2nd order bit
Sum1 =  A1 $ (Subtract $ B1) $ CarryOut0;
CarryOut1 =  (A1 & (Subtract $ B1)) # (CarryOut0 & (A1 $ (Subtract $ B1)));

" 3rd order bit
Sum2 =  A2 $ (Subtract $ B2) $ CarryOut1;
CarryOut2 =  (A2 & (Subtract $ B2)) # (CarryOut1 & (A2 $ (Subtract $ B2)));

" 4th order bit
Sum3 =  A3 $ (Subtract $ B3) $ CarryOut2;

" Plays the role of CarryOut3, as this is meant for a 4 bit-wide input/output
Sum4 =  (A3 & (Subtract $ B3)) # (CarryOut2 & (A3 $ (Subtract $ B3)));


" compute the flags
" Zero indicates if the sum is zero
Zero = !Sum3 & !Sum2 & !Sum1 & !Sum0;

" Sign indicates if the sign of the sum is positive (0) or negative (1)
Sign = Sum3

" Overflow indicates if with signed values the sum's sign differs 
" from what it should be in decimal
Overflow = CarryOut2 $ Sum4;

" Carry indicates if with unsigned values the sum goes over 4 bits
Carry = Sum4 $ Subtract;


" compute unsigned comparisons
UnsignedEQ = Zero;
UnsignedGT = !Carry & !Zero;

" less than is just not greater than or equal
UnsignedLT  =  !(UnsignedGT # UnsignedEQ);


" compute signed comparisons
SignedEQ = Zero;
SignedGT = !Zero & !(Overflow $ Sign);

" less than is just not greater than or equal
SignedLT  =  !(SignedGT # SignedEQ);


END  addsub